CS171

What is Machine Learning?
- definition by Tom Mitchell: study of algorithms that: - improve their performance P, - at some task T, - with experience E

Traditional Programming
- data + program --> computer --> output

Machine Learning
- data + desired outputs (labels) --> computer --> program

When do we use ML?
- ML is used when human expertise does not exist (e.g. navigating on Mars)
- humans can't explain expertise (e.g. speech recognition)
- models must be customized (e.g. personalized medicine)
- models based on huge amounts of data (e.g. genomics)

examples of tasks best solved by learning algorithm
- recognizing patterns:
	0 facial identities/expressions
	0 handwritten or spoken words
	0 medical images
- generating patterns:
	0 generating text, images, motion sequences
- recognizing anomalies:
	0 unusual credit card transactions
	0 unusual patterns of sensor reading in a nuclear power plant
- prediction:
	0 future stock prices
	0 weather conditions

Sample Applications: web search, computational biology, finance, social networks, robotics, etc

Defining the Learning Task
- improve the task (T) with respect to performance metric (P) based on experience (E)
	e.g. T-playing checkers, P-% of games won, E-games against itself
	e.g. T-recognizing hand-written words, P-% of words correctly classified, E-database of images of hand-written words

Applications of ML
- autonomous cars
- facial recognition
- speech recognition
- generative AI

Types of Learning
- supervised learning: given training data + desired outputs (labels)

    Regression; given (x1,y1), (x2,y2)...(xn,yn)
	learn a function f(x) to predict y given x
	- in regression: y is a real number
	i.e. given x, y could be some number (1,2,3...)

    Classification; given (x1,y1), (x2,y2)...(xn,yn)
	learn a function f(x) to predict y given x
	- in classification: y is categorical
	i.e. given x, y can be only certain categories not numbers
	- x can be multi dimensional (each dimension corresponding to an attribute)
	e.g. giving tumor size + age instead of just tumor size

- unsupervised learning: given training data (w/o desired outputs)
	0 given x1, x2, ... xn (w/o labels)
	0 output hidden structure behind the x's 
		(e.g. clustering, machine can see clusters are related despite no y)

    Applications
	0 genomics; group individuals by genetic similarity
	0 organize computng clusters
	0 social network analysis
	0 market segmentation
	0 astronomical data analysis

- reinforcement learning: rewards from sequence of actions
	0 given a sequence of states and actions with (delayed) rewards, output a policy
	    - policy is a mapping from states -> actions that tells you what to do in a given state

	Agent-Environment Interface
	- Environment receives action from Agent, Agent receives reward/state from Environment

- semi-supervised learning: given training data + some desired outputs

Designing a Learning System
- choose the training experience
- choose exactly what is to be learned
	i.e. the target function
- choose how to represent the target function
- choose a learning algo to infer the target function from the experience

Training v Test Set
- training set; subset to train a model
- test set; subset to test the trained model (unseen data)
	0 both are usually drawn from the same distributed data













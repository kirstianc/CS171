CS171

What is Machine Learning?
- definition by Tom Mitchell: study of algorithms that: - improve their performance P, - at some task T, - with experience E

Traditional Programming
- data + program --> computer --> output

Machine Learning
- data + desired outputs (labels) --> computer --> program

When do we use ML?
- ML is used when human expertise does not exist (e.g. navigating on Mars)
- humans can't explain expertise (e.g. speech recognition)
- models must be customized (e.g. personalized medicine)
- models based on huge amounts of data (e.g. genomics)

examples of tasks best solved by learning algorithm
- recognizing patterns:
	: facial identities/expressions
	: handwritten or spoken words
	: medical images
- generating patterns:
	: generating text, images, motion sequences
- recognizing anomalies:
	: unusual credit card transactions
	: unusual patterns of sensor reading in a nuclear power plant
- prediction:
	: future stock prices
	: weather conditions

Sample Applications: web search, computational biology, finance, social networks, robotics, etc

Defining the Learning Task
- improve the task (T) with respect to performance metric (P) based on experience (E)
	e.g. T-playing checkers, P-% of games won, E-games against itself
	e.g. T-recognizing hand-written words, P-% of words correctly classified, E-database of images of hand-written words

Applications of ML
- autonomous cars
- facial recognition
- speech recognition
- generative AI

Types of Learning
- supervised learning: given training data + desired outputs (labels)

    Regression; given (x1,y1), (x2,y2)...(xn,yn)
	learn a function f(x) to predict y given x
	- in regression: y is a real number
	i.e. given x, y could be some number (1,2,3...)

    Classification; given (x1,y1), (x2,y2)...(xn,yn)
	learn a function f(x) to predict y given x
	- in classification: y is categorical
	i.e. given x, y can be only certain categories not numbers
	- x can be multi dimensional (each dimension corresponding to an attribute)
	e.g. giving tumor size + age instead of just tumor size

- unsupervised learning: given training data (w/o desired outputs)
	: given x1, x2, ... xn (w/o labels)
	: output hidden structure behind the x's 
		(e.g. clustering, machine can see clusters are related despite no y)

    Applications
	: genomics; group individuals by genetic similarity
	: organize computng clusters
	: social network analysis
	: market segmentation
	: astronomical data analysis

- reinforcement learning: rewards from sequence of actions
	: given a sequence of states and actions with (delayed) rewards, output a policy
	    - policy is a mapping from states -> actions that tells you what to do in a given state

	Agent-Environment Interface
	- Environment receives action from Agent, Agent receives reward/state from Environment

- semi-supervised learning: given training data + some desired outputs

Designing a Learning System
- choose the training experience
- choose exactly what is to be learned
	i.e. the target function
- choose how to represent the target function
- choose a learning algo to infer the target function from the experience

Training v Test Set
- training set; subset to train a model
- test set; subset to test the trained model (unseen data)
	: both are usually drawn from the same distributed data

------------------------
Review:
- Machine Learning <p t e>: performance, task, experience

- 4 types of ML: 
	supervised: given training data + desired outputs (labels)
	unsupervised: given training data (w/o desired outputs)
	reinforcement: rewards from sequence of actions
	semi-supervised: given training data + some desired outputs

- 2 types of supervised learning:
	regression: y is a real number
	classification: y is categorical

- 2 types of unsupervised learning:
	clustering: group similar data points
	dimensionality reduction: reduce dimensionality of data

- training v test set: training set is used to train a model, test set is used to test the trained model
------------------------
Decision Trees (not usually used in production, industry uses decision tree: ensemble)
What is a Decision Tree?
- is a Supervised learning technique that can be used for both Classification and Regression problems (mostly preferred for Classification)
	e.g. Buying a car (decision tree)
		- is it a 2 door car?
			- yes: is it a sports car?
				- yes: buy it
				- no: don't buy it
			- no: is it a 4 door car?
				- yes: is it a luxury car?
					- yes: buy it
					- no: don't buy it
				- no: don't buy it

Tree Induction - challenges
1 how to classify a leaf node? 
	: assign the majority class (i.e. whichever side has the highest popularity)
2 determine how to split the records?
	: how to specify the attribute test condition?
		- depends on attribute types
			| nominal - there is no order to the values (e.g. red, green, blue)
			| ordinal - there is an order to the values (e.g. low, medium, high)
			| continuous - there is an infinite number of values (e.g. 1.2, 1.3, 1.4)
		- depends on number of ways to split
	: how to determine the best attribute to split on? (2 way/binary split | multi-way split)
		- nodes with homogeneous class distribution is preferred
		- need a measure of node impurity
			| entropy - shows randomness of data
			| gini index - shows purity of data
			| information gain - shows how much information is gained by splitting data
3 determine when to stop splitting
	: when a node is 100% in one class
	: when splitting a node will result in the tree exceeding max depth
	: when info gain is less than threshold
	: when number of examples in node is below threshold
	: early termination

Pros 
	: inexpensive
	: extremely fast
	: easy to itnerpet
	: accuracy comparable to other methods

Cons
	: can create over compelx trees that do not generalize data well (overfitting)
	: highly snesitive to small changes of the data: high variance
		- small changes in data can result in large changes in tree
		- can be reduced by ensemble methods

